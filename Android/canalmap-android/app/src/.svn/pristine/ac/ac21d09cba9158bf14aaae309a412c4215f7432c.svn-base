package com.tyctak.cancamapp;

import android.app.Activity;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.util.TypedValue;

import java.io.ByteArrayOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.UUID;

public class Library {

    private static final String TAG = "Library";

    public Long getJustDate(Long value) {
        Long retval = 0l;
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");

        retval = new Date(format.format(getDate(value))).getTime();

        return retval;
    }

    public Integer ConvertToDensityPixels(Activity parent, Integer pixels) {
        return (int)TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, pixels, parent.getResources().getDisplayMetrics());
    }

    public Date now() {
        return new Date();
    }

    public Long getDate(Date date) {
        return (date != null ? date.getTime() : null);
    }

    public Date getDate(Long date) {
        return new Date(date);
    }

    public static String getUUID() {
        UUID uuid = UUID.randomUUID();
        return uuid.toString();
    }

    public static byte[] encodeBinary(Bitmap image) {
        Bitmap immagex = image;
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        immagex.compress(Bitmap.CompressFormat.PNG, 90, baos);
        byte[] b = baos.toByteArray();
        return b;
    }

    public static Bitmap decodeBinary(byte[] image) {
        Bitmap retval = null;
        if (image != null) retval = BitmapFactory.decodeByteArray(image, 0, image.length);
        return retval;
    }

//    public static byte[] getBytes(String url) {
//        try {
//            URLConnection httpConn = new URL(url).openConnection();
//            httpConn.setConnectTimeout(8000);
//            httpConn.setReadTimeout(5000);
//            httpConn.setRequestProperty("Content-Type", "image/png");
//            httpConn.setDoOutput(false);
//            httpConn.setDoInput(true);
//            httpConn.setUseCaches(false);
//            httpConn.setRequestProperty("Accept-Encoding", "identity");
//            System.setProperty("http.keepAlive", "false");
//
//            InputStream os = httpConn.getInputStream();
//
//            BufferedInputStream bis = new BufferedInputStream(os);
//            ByteArrayOutputStream baos = new ByteArrayOutputStream();
//
//            int current = 0;
//            byte[] byteChunk = new byte[2048];
//            byte[] bytes;
//
//            try {
//                while ((current = bis.read(byteChunk)) != -1) {
//                    baos.write(byteChunk, 0, current);
//                }
//
//                bytes = baos.toByteArray();
//            } catch (IOException e) {
////                baos.write(130);
//                bytes = baos.toByteArray();
//                if ((bytes.length + 1) == httpConn.getContentLength()) {
//                    Log.d(TAG, "IOException error in image download (" + url + "), correcting +1 char");
//                    baos.write(130);
//                    bytes = baos.toByteArray();
//                } else if (bytes.length == httpConn.getContentLength()) {
//                    Log.d(TAG, "IOException error in image download (" + url + "), but correct length");
//                } else {
//                    FileOutputStream fos = new FileOutputStream(Environment.getExternalStorageDirectory() + "/image.png");
//                    fos.write(bytes);
//                    fos.close();
//                    e.printStackTrace();
//                }
//            }
//
//            baos.close();
//            bis.close();
//            os.close();
//
//            return bytes;
//        } catch (SocketTimeoutException e) {
//            e.printStackTrace();
//        } catch (MalformedURLException e) {
//            e.printStackTrace();
//        } catch (IOException e) {
//            e.printStackTrace();
//        }
//
//        return null;
//    }
}
